// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// https://prismaliser.app/

// https://cloud.prisma.io/projects
// https://www.tpu-ptfe.com/post/6329.html
// npx prisma db push
// email:eric.liu@gmail.com
// psw:Baza7183!
// eric.dev.liu@gmail.com

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_DEV")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      UserRole @default(VISITOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile?
}

model Profile {
  id       Int     @id @default(autoincrement())
  name     String?
  address  String?
  phone    String?
  whatsapp String?
  note     String?
  userId   Int     @unique
  user     User    @relation(fields: [userId], references: [id])
}

enum UserRole {
  ADMIN
  VISITOR
  BISHKEKSTAFF
  CHINESESTAFF
  CLIENT
  INKCLIENT
}

model Product {
  id              Int            @id @default(autoincrement())
  source          String?
  codeKent        String         @unique
  codeKent0       String?
  codeChina       String?
  nameRussian     String?
  nameChinese     String?
  nameEnglish     String?
  subCat          String?
  priceChinaKG    Float?         @default(0)
  priceChinaMeter Float?         @default(0)
  width           Float?         @default(0)
  gram            Float?         @default(0)
  marketPrice     Float?         @default(0)
  priceHitory     PriceHistory[]
  imageURL        String[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  note            String?
  currentPrice    Float?         @default(0)
  isPluff         Boolean?       @default(false)
  isResToChina    Boolean?       @default(false)
  isKentSample    Boolean?       @default(false)
  staff           String?
  client          String?
  description     String?        @db.VarChar(1000)
  isPopular       Boolean?       @default(false)
  priceUpdated    Float?         @default(0)
}

model PriceHistory {
  id        Int      @id @default(autoincrement())
  price     Float
  date      DateTime
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}

// exchange, logistic, profit%
model Variables {
  id        Int      @id @default(autoincrement())
  name      String
  value     Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Roll {
  id       Int     @id @default(autoincrement())
  kentCode String?
  amount   Float?  @default(0)
  unit     String?
  rbg      String?
  cargo    Cargo?  @relation(fields: [cargoId], references: [id])
  cargoId  Int?
  cost     Float?  @default(0)
  sale     Sale?   @relation(fields: [saleId], references: [id])
  saleId   Int?
  location String?
  note     String?
}

model Cargo {
  id              Int       @id @default(autoincrement())
  description     String?   @db.VarChar(1000)
  dateArrived     DateTime?
  dateSent        DateTime? @default(now())
  feePackage      Float?    @default(0)
  valueCargo      Float?    @default(0)
  logisticFee     Float?    @default(0)
  isFullyRecieved Boolean?  @default(false)
  roll            Roll[]
}

model Finance {
  id         Int              @id @default(autoincrement())
  date       DateTime
  incomeUSD  Float?
  incomeSom  Float?
  expenseUSD Float?
  expenseSom Float?
  note       String?
  cat        FinanceCatagory?
  Client     Client?          @relation(fields: [clientId], references: [id])
  clientId   Int?
}

enum FinanceCatagory {
  INIT
  CARGO
  OPERATION
  INVESTMENT
  LOADER
  TRANSFER
  TAX
  PORTER
  SALES
  SALARY
  RENT
  OTHER
}

model Client {
  id      Int       @id @default(autoincrement())
  Sales   Sale[]
  name    String?
  staff   String?
  payment Finance[]
}

model Sale {
  id            Int       @id @default(autoincrement())
  date          DateTime?
  client        Client?   @relation(fields: [clientId], references: [id])
  clientId      Int?
  Roll          Roll[]
  note          String?
  amount        Float?
  unit          String?
  priceUSD      Float?
  paymentMethod String?
  status        String?
}
